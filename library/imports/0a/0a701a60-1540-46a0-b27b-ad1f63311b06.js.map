{"version":3,"sources":["..\\..\\..\\..\\assets\\Scripts/assets\\Scripts\\Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AAFJ,KAHP;;AAQL;;AAEA;;AAEAC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KAlBI;;AAoBLK,cAAU,oBAAY;AAClB;AACA,aAAKR,IAAL,CAAUS,YAAV;AACA;AACA,aAAKT,IAAL,CAAUU,SAAV;AACA;AACA,aAAKN,IAAL,CAAUO,OAAV;AACH,KA3BI;;AA6BLC,SA7BK,mBA6BI,CAER,CA/BI;;;AAiCLC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAIC,eAAe,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAkB,KAAKhB,IAAL,CAAUiB,YAAnD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKd,IAAL,CAAUe,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACA;AACA,YAAI,KAAKpB,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC5C;AACA,iBAAKW,QAAL;AACA;AACH;AAEJ;AA7CI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // When the distance between the star and main character is less than this value, collection of the point will be completed\r\n        pickRadius: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    getPlayerDistance: function () {\r\n        // judge the distance according to the position of the player node\r\n        var playerPos = this.game.player.getPosition();\r\n        // calculate the distance between two nodes according to their positions\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function () {\r\n        // When the stars are being collected, invoke the interface in the Game script to generate a new star\r\n        this.game.spawnNewStar();\r\n        // invoke the scoring method of the Game script\r\n        this.game.gainScore();\r\n        // then destroy the current star's node\r\n        this.node.destroy();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n        // update the transparency of the star according to the timer in the Game script\r\n        var opacityRatio = 1 - this.game.timer / this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n        // judge if the distance between the star and main character is less than the collecting distance for each frame\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // invoke collecting behavior\r\n            this.onPicked();\r\n            return;\r\n        }\r\n       \r\n    },\r\n});\r\n"]}